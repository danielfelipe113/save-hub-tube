"use strict";const{spawn:p}=require("child_process");let o;const n=require("path"),d=require("os");switch(d.platform()){case"win32":o="yt-dlp.exe";break;case"darwin":o="yt-dlp";break;case"linux":o="yt-dlp_linux";break;default:throw new Error("Unsupported platform")}const t=process.argv[2],i=process.argv[3],r=process.argv[4],u=process.argv[5],g=n.normalize(n.join(u,o)),a=r&&Number(r)===1;a&&Number(r)===1?console.log(`Fetching details of ${t}`):console.log(`Starting setup to download ${t}`);const m=`${i}/%(title)s.%(ext)s`,l=["--newline","--verbose","--q","--progress","--progress-template",'{"progress_percentage":"%(progress._percent_str)s"}',"--print-json","-o",m,t];a&&l.push("--simulate");const s=p(g,l);console.log(`Download started ${t}`);s.stdout.on("data",e=>{process.send({type:"stdout",data:e.toString()})});s.stderr.on("data",e=>{process.send({type:"stderr",data:e.toString()})});s.on("close",e=>{process.send({type:"close",code:e})});s.on("error",e=>{console.error("Error occurred:",e.message)});s.on("exit",(e,c)=>{console.log(`Child process exited with code ${e} and signal ${c}`)});
